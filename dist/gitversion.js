/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-gitversion",
factory: function (require) {
var plugin=(()=>{var Oe=Object.create,N=Object.defineProperty,Se=Object.defineProperties,Ae=Object.getOwnPropertyDescriptor,Ie=Object.getOwnPropertyDescriptors,je=Object.getOwnPropertyNames,ne=Object.getOwnPropertySymbols,Ue=Object.getPrototypeOf,ie=Object.prototype.hasOwnProperty,Me=Object.prototype.propertyIsEnumerable;var oe=(t,e,r)=>e in t?N(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,se=(t,e)=>{for(var r in e||(e={}))ie.call(e,r)&&oe(t,r,e[r]);if(ne)for(var r of ne(e))Me.call(e,r)&&oe(t,r,e[r]);return t},ae=(t,e)=>Se(t,Ie(e)),_e=t=>N(t,"__esModule",{value:!0});var g=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var F=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Fe=(t,e)=>{for(var r in e)N(t,r,{get:e[r],enumerable:!0})},De=(t,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of je(e))!ie.call(t,n)&&n!=="default"&&N(t,n,{get:()=>e[n],enumerable:!(r=Ae(e,n))||r.enumerable});return t},d=t=>De(_e(N(t!=null?Oe(Ue(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var le=F((Y,pe)=>{(function(t,e){typeof define=="function"&&define.amd?define([],e):typeof Y=="object"?pe.exports=e():t.compareVersions=e()})(Y,function(){var t=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;function e(i,s){return i.indexOf(s)===-1?i.length:i.indexOf(s)}function r(i){var s=i.replace(/^v/,"").replace(/\+.*$/,""),l=e(s,"-"),m=s.substring(0,l).split(".");return m.push(s.substring(l+1)),m}function n(i){var s=parseInt(i,10);return isNaN(s)?i:s}function a(i){if(typeof i!="string")throw new TypeError("Invalid argument expected string");var s=i.match(t);if(!s)throw new Error("Invalid argument not valid semver ('"+i+"' received)");return s.shift(),s}function o(i,s){return typeof i!=typeof s?[String(i),String(s)]:[i,s]}function u(i,s){var[l,m]=o(n(i),n(s));return l>m?1:l<m?-1:0}function p(i,s){for(var l=0;l<Math.max(i.length,s.length);l++){var m=u(i[l]||0,s[l]||0);if(m!==0)return m}return 0}function c(i,s){[i,s].forEach(a);for(var l=r(i),m=r(s),f=0;f<Math.max(l.length-1,m.length-1);f++){var k=parseInt(l[f]||0,10),C=parseInt(m[f]||0,10);if(k>C)return 1;if(C>k)return-1}var L=l[l.length-1],V=m[m.length-1];if(L&&V){var w=L.split(".").map(n),b=V.split(".").map(n);for(f=0;f<Math.max(w.length,b.length);f++){if(w[f]===void 0||typeof b[f]=="string"&&typeof w[f]=="number")return-1;if(b[f]===void 0||typeof w[f]=="string"&&typeof b[f]=="number"||w[f]>b[f])return 1;if(b[f]>w[f])return-1}}else if(L||V)return L?-1:1;return 0}var y=[">",">=","=","<","<="],v={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]};function E(i){if(typeof i!="string")throw new TypeError("Invalid operator type, expected string but got "+typeof i);if(y.indexOf(i)===-1)throw new TypeError("Invalid operator, expected one of "+y.join("|"))}return c.validate=function(i){return typeof i=="string"&&t.test(i)},c.compare=function(i,s,l){E(l);var m=c(i,s);return v[l].indexOf(m)>-1},c.satisfies=function(i,s){var l=s.match(/^([<>=~^]+)/),m=l?l[1]:"=";if(m!=="^"&&m!=="~")return c.compare(i,s,m);var[f,k,C]=a(i),[L,V,w]=a(s);return u(f,L)!==0?!1:m==="^"?p([k,C],[V,w])>=0:u(k,V)!==0?!1:u(C,w)>=0},c})});var we=F((Zt,ee)=>{(function(){"use strict";var t=g("fs"),e=g("string_decoder").StringDecoder;function r(o,u,p,c,y){var v=0,c=c||"utf8",p=p||`
`,y=y||1024,E=new Buffer(y),i="",s=new e(c),l=!1,m=!1,f=-1;function k(){l||(t.close(o,function(w){if(w)throw w}),l=!0)}function C(w){function b(){t.read(o,E,0,y,v,function(M,_){var re;if(M)throw M;_<y&&(m=!0,k()),v+=_,i+=s.write(E.slice(0,_)),f<0&&(f=i.indexOf(p)),re=f===i.length-1,_&&(f===-1||re)&&!m?b():w()})}b()}function L(){return i.length>0||!m}function V(w){function b(){var M=i.substring(0,f);i=i.substring(f+p.length),f=-1,w(M)}if(f<0&&(f=i.indexOf(p)),f<0)if(m)if(L())f=i.length,b();else throw new Error("No more lines to read.");else C(b);else b()}this.hasNextLine=L,this.nextLine=V,this.close=k,C(u)}function n(o,u,p,c,y){t.open(o,"r",parseInt("666",8),function(v,E){var i;if(v)throw v;i=new r(E,function(){u(i)},p,c,y)})}function a(o,u,p,c,y){var v,E=u.length==3;function i(){v&&typeof v=="function"&&v()}return n(o,function(s){function l(){s.hasNextLine()?setImmediate(f):i()}function m(k){k!==!1?l():(i(),s.close())}function f(){s.nextLine(function(k){var C=!s.hasNextLine();E?u(k,C,m):u(k,C)!==!1?l():(i(),s.close())})}l()},p,c,y),{then:function(s){v=s}}}ee.exports.open=n,ee.exports.eachLine=a})()});var Pe=F((Jt,ye)=>{ye.exports=function(t,e){e=e||{},e.listUnicodeChar=e.hasOwnProperty("listUnicodeChar")?e.listUnicodeChar:!1,e.stripListLeaders=e.hasOwnProperty("stripListLeaders")?e.stripListLeaders:!0,e.gfm=e.hasOwnProperty("gfm")?e.gfm:!0;var r=t||"";r=r.replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*$/gm,"");try{e.stripListLeaders&&(e.listUnicodeChar?r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,e.listUnicodeChar+" $1"):r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,"$1")),e.gfm&&(r=r.replace(/\n={2,}/g,`
`).replace(/~~/g,"").replace(/`{3}.*\n/g,"")),r=r.replace(/<[^>]*>/g,"").replace(/^[=\-]{2,}\s*$/g,"").replace(/\[\^.+?\](\: .*?$)?/g,"").replace(/\s{0,2}\[.*?\]: .*?$/g,"").replace(/\!\[.*?\][\[\(].*?[\]\)]/g,"").replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1").replace(/^\s{0,3}>\s?/g,"").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g,"").replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} {0,}(\n)?\s{0,}$/gm,"$1$2$3").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/(`{3,})(.*?)\1/gm,"$2").replace(/`(.+?)`/g,"$1").replace(/\n{2,}/g,`

`)}catch(n){return console.error(n),t}return r}});var Ve=F((Qt,Le)=>{var A=g("os").EOL,Ke=we(),Ze=Pe(),ke=/\[?v?([\w\d.-]+\.[\w\d.-]+[a-zA-Z0-9])\]?/,be=/.*[ ](\d\d?\d?\d?[-/.]\d\d?[-/.]\d\d?\d?\d?).*/,Je=/^###/,Qe=/^[*-]/,Xe={removeMarkdown:!0};function Ye(t,e){if(typeof t=="undefined")throw new Error("missing options argument");if(typeof t=="string"&&(t={filePath:t}),typeof t=="object"){let a=typeof t.filePath!="undefined",o=typeof t.text!="undefined",u=typeof t.filePath!="string",p=typeof t.text!="string";if(!a&&!o)throw new Error("must provide filePath or text");if(a&&u)throw new Error("invalid filePath, expected string");if(o&&p)throw new Error("invalid text, expected string")}let r=Object.assign({},Xe,t),n=et(r);return typeof e=="function"&&n.then(function(a){e(null,a)}).catch(function(a){e(a)}),n}function et(t){let e=t.filePath,r=t.text,n={log:{versions:[]},current:null},a=tt.bind(n,t);return new Promise(function(o,u){function p(){n.current&&Ee(n),n.log.description=Ce(n.log.description),n.log.description===""&&delete n.log.description,o(n.log)}r?(r.split(/\r\n?|\n/mg).forEach(a),p()):Ke.eachLine(e,a,A).then(p)})}function tt(t,e){if(!e.match(/^\[[^[\]]*\] *?:/)){if(!this.log.title&&e.match(/^# ?[^#]/)){this.log.title=e.substring(1).trim();return}if(e.match(/^##? ?[^#]/)){this.current&&this.current.title&&Ee(this),this.current=rt(),ke.exec(e)&&(this.current.version=ke.exec(e)[1]),this.current.title=e.substring(2).trim(),this.current.title&&be.exec(this.current.title)&&(this.current.date=be.exec(this.current.title)[1]);return}if(this.current){if(this.current.body+=e+A,Je.exec(e)){let r=e.replace("###","").trim();this.current.parsed[r]||(this.current.parsed[r]=[],this.current._private.activeSubhead=r)}if(Qe.exec(e)){let r=t.removeMarkdown?Ze(e):e;this.current.parsed._.push(r),this.current._private.activeSubhead&&this.current.parsed[this.current._private.activeSubhead].push(r)}}else this.log.description=(this.log.description||"")+e+A}}function rt(){return{version:null,title:null,date:null,body:"",parsed:{_:[]},_private:{activeSubhead:null}}}function Ee(t){delete t.current._private,t.current.body=Ce(t.current.body),t.log.versions.push(t.current)}function Ce(t){return t?(t=t.trim(),t=t.replace(new RegExp("["+A+"]*"),""),t=t.replace(new RegExp("["+A+"]*$"),""),t):""}Le.exports=Ye});var ot={};Fe(ot,{BranchType:()=>h,DEFAULT_REPO_VERSION:()=>T,GitVersionBumpCommand:()=>S,GitVersionCheckCommand:()=>j,GitVersionCommitCommand:()=>U,GitVersionConfiguration:()=>x,GitVersionPublishCommand:()=>I,GitVersionResetCommand:()=>O,GitVersionRestoreCommand:()=>$,GitVersionTagCommand:()=>B,addAndCommit:()=>Q,bump:()=>H,checkGit:()=>qe,currentBranch:()=>Z,default:()=>it,execCapture:()=>P,tag:()=>J,tagPrefix:()=>G,updateWorkspaceWithVersion:()=>D,updateWorkspacesWithVersion:()=>W});var R=d(g("@yarnpkg/core")),fe=d(g("clipanion"));var h;(function(o){o.MAIN="main",o.PRERELEASE="prerelease",o.RELEASE="release",o.FEATURE="feature",o.UNKNOWN="unknown"})(h||(h={}));var ce=d(g("child_process"));async function P(t,e,r){return new Promise((n,a)=>{console.log(">>>",t,...e);let o=(0,ce.spawn)(t,e,{cwd:r}),u="",p="";o.stdout.on("data",c=>{u+=c.toString()}),o.stderr.on("data",c=>{p+=c.toString()}),o.on("close",c=>{c===0?n({code:c,result:u}):a(new Error(u+p))})})}async function qe(){return P("git",["--version"])}async function Z(){return process.env.BUILD_SOURCEBRANCHNAME?process.env.BUILD_SOURCEBRANCHNAME:(await P("git",["rev-parse","--abbrev-ref","HEAD"])).result.replace(/\n*$/,"")}async function J(t,e){if(await P("git",["tag",t]),e)return P("git",["push","origin",t])}async function Q(t,e){let r=await P("git",["add",...t]);console.log(r.result);let n=await P("git",["commit",...t,"-m",e]);console.log(n.result)}var T="0.0.0",X=class{static async fromContext(e){let r=await R.Configuration.find(e.cwd,e.plugins),n=await Z();return new X(r,n)}constructor(e,r){this.yarnConfig=e;let n=e.get("featureBranchPatterns");console.log(n),console.log(r),this.featureBranchPatterns=n.map(a=>new RegExp(a)),this.mainBranch=e.get("mainBranch"),this.independentVersioning=e.get("independentVersioning"),this.versionTagPrefix=e.get("versionTagPrefix"),this.versionBranch=this.parse(r)}parse(e){if(this.mainBranch===e)return{branchType:h.MAIN,name:e};for(let r of this.featureBranchPatterns)if(r.test(e)){let n=r.exec(e);if(n&&n.length===2)return{name:n[1],branchType:h.FEATURE};throw new fe.UsageError(`The feature pattern '${r.source}' matched the current branch but it should result in exact 1 group match`)}return{name:"unknown",branchType:h.UNKNOWN}}},x=X;x.definition={featureBranchPatterns:{description:`Feature branches. This will apply the following rules to bumps:
  - version pattern: 'x.x.x-<<feature>>.<<increment>>'
  - always increment on each commit
  - no checking for conventional commits in git history
  - publish on npm channel '<<feature>>'`,isArray:!0,type:R.SettingsType.STRING,default:["^feature/(.*)$"]},releaseBranchPatterns:{description:`Release branches. This will apply the following rules to bumps:
  - Official release channels
  - Conventional commits enabled
  - publish on npm channel '<<release>>'`,isArray:!0,type:R.SettingsType.STRING,default:["^release/(.*)$"]},mainBranch:{description:"The main branch. This is the official channel and will produce npm packages with the lates npm disttag",type:R.SettingsType.STRING,default:"main"},independentVersioning:{description:"When independent versioning is enabled each package will have a different version based on the commits in the package folder",type:R.SettingsType.BOOLEAN,default:!1},versionTagPrefix:{description:'The prefix used for git tags. Defaults to "v"',type:R.SettingsType.STRING,default:"v"}};var ue=d(g("@yarnpkg/cli")),me=d(g("@yarnpkg/core"));function G(t,e){let r=t;return e&&(e.scope&&(r+=`@${e.scope}/`),r+=e.name,r+="-"),r}async function W(t,e){return Promise.all(t.map(r=>D(r,e)))}async function D(t,e){if(t.manifest.version!==e)return console.log(`@${t.locator.scope}/${t.locator.name}`,t.manifest.version,"=>",e),t.manifest.version=e,t.persistManifest()}var He=le(),$=class extends ue.BaseCommand{async execute(){let e=await x.fromContext(this.context),{project:r}=await me.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning){let n=r.workspaces.map(a=>this.updateWorkspaceFromGit(e.versionTagPrefix,e.versionBranch,a));Promise.all(n)}else{let n=[this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch),...r.workspaces.map(o=>this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch,o.locator))],a=(await Promise.all(n)).sort(He).reverse();await W(r.workspaces,a[0])}}async updateWorkspaceFromGit(e,r,n){let a=await this.determineCurrentGitVersion(e,r,n.locator);return D(n,a)}async determineCurrentGitVersion(e,r,n){let a=G(e,n),o=`${a}*`,c=(await P("git",["-c","versionsort.suffix=-","tag","--sort=-version:refname","--list",o])).result.split(`
`),y=c.filter(s=>new RegExp(`^${this.escapeRegExp(a)}[0-9]+.[0-9]+.[0-9]+$`).test(s));if(r.branchType!==h.MAIN){let s=c.filter(l=>new RegExp(`${a}[0-9]+.[0-9]+.[0-9]+-${this.escapeRegExp(r.name)}.[0-9]+$`).test(l));s.length>0?c=s:c=y}else c=y;c=c.filter(s=>s);let v;c.length>0?v=c[0]:v="0.0.0";let E=v,i=new RegExp(`^${this.escapeRegExp(a)}`);return E=E.replace(i,""),E}escapeRegExp(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}};$.paths=[["gitversion","restore"]];var ge=d(g("@yarnpkg/cli")),q=d(g("@yarnpkg/core"));var O=class extends ge.BaseCommand{async execute(){let e=await q.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await q.Project.find(e,this.context.cwd);await W(r.workspaces,T)}};O.paths=[["gitversion","reset"]];var de=d(g("@yarnpkg/cli")),z=d(g("@yarnpkg/core"));var ze=["--no-sign","--skip.commit","--skip.tag"];async function H(t,e,r,n,a){let o=[...ze];if(o.push(`--path='${r}'`),o.push(`--tag-prefix='${e}'`),o.push(`--infile='${r}/CHANGELOG.md'`),a&&(o.push(`--release-as='${a}'`),o.push("--skip.bump")),t.branchType===h.FEATURE)o.push(`--prerelease=${t.name}`,"--skip.changelog"),a||o.push("--release-as=patch");else if(t.branchType===h.PRERELEASE||t.branchType===h.RELEASE)o.push(`--prerelease=${t.name}`);else if(t.branchType===h.UNKNOWN)return;let u=await P("yarn",["standard-version",...o],n);console.log(u.result)}var S=class extends de.BaseCommand{async execute(){let e=new $;e.context=this.context,e.cli=this.cli,await e.execute();let r=await x.fromContext(this.context),{project:n}=await z.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{await H(r.versionBranch,G(r.versionTagPrefix),n.topLevelWorkspace.cwd,n.topLevelWorkspace.cwd);let o=(await z.Manifest.find(n.topLevelWorkspace.cwd)).version;if(o){let u=n.topLevelWorkspace.getRecursiveWorkspaceChildren().map(async p=>(p.manifest.version=o,await p.persistManifest(),H(r.versionBranch,G(r.versionTagPrefix),p.cwd,n.topLevelWorkspace.cwd,o)));await Promise.all(u)}}}};S.paths=[["gitversion","bump"]];var Re=d(g("@yarnpkg/cli")),K=d(g("@yarnpkg/core"));var te=d(g("path"));var he=d(g("@yarnpkg/cli")),xe=d(g("@yarnpkg/core")),ve=d(g("clipanion"));var B=class extends he.BaseCommand{constructor(){super(...arguments);this.push=ve.Option.Boolean("Push the tags to git",!0)}async execute(){let e=await x.fromContext(this.context),{project:r}=await xe.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning)throw new Error("Not implemented");{let n=r.topLevelWorkspace.manifest.version;n&&n!==T&&await J(`${e.versionTagPrefix}${n}`,this.push)}}};B.paths=[["gitversion","tag"]];var Te=d(g("fs")),nt=Ve(),I=class extends Re.BaseCommand{async execute(){let e=new B;e.context=this.context,e.cli=this.cli,await e.execute();let r=await x.fromContext(this.context),{project:n}=await K.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{let a=n.workspaces.filter(this.filterPublicWorkspace),o=a.map(p=>{let c=[];(r.versionBranch.branchType===h.FEATURE||r.versionBranch.branchType===h.PRERELEASE)&&(c=["--tag",r.versionBranch.name]),P("yarn",["npm","publish",...c],p.cwd)});await Promise.all(o);let u=ae(se({},await this.readChangeLog(n.topLevelWorkspace)),{packages:await Promise.all(a.map(p=>this.readChangeLog(p)))});await n.configuration.triggerHook(p=>p.afterPublish,n,r.versionBranch,u)}}async readChangeLog(e){let r=(0,te.join)(e.cwd,"CHANGELOG.md"),n=e.manifest.version,a;if((0,Te.existsSync)(r)){let u=(await nt({filePath:(0,te.join)(e.cwd,"CHANGELOG.md"),removeMarkdown:!1})).versions.find(p=>p.version===n)}return{version:n||"0.0.0",changelog:a,packageName:K.structUtils.stringifyIdent(e.locator)}}filterPublicWorkspace(e){return e.manifest.private===!1}};I.paths=[["gitversion","publish"]];var $e=d(g("@yarnpkg/cli")),Be=d(g("@yarnpkg/core"));var j=class extends $e.BaseCommand{async execute(){let e=await x.fromContext(this.context);console.log(e.versionBranch);let{project:r}=await Be.Project.find(e.yarnConfig,this.context.cwd);r.workspaces.forEach(n=>{console.log(n.locator.scope,n.locator.name,n.manifest.private,n.manifest.version)})}};j.paths=[["gitversion","check"]];var Ge=d(g("@yarnpkg/cli")),Ne=d(g("@yarnpkg/core"));var U=class extends Ge.BaseCommand{async execute(){let e=await x.fromContext(this.context),{project:r}=await Ne.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning)throw new Error("Not implemented");{let n=r.topLevelWorkspace.manifest.version;n&&n!==T&&await Q(["**/CHANGELOG.md"],`chore(release): ${n}`)}}};U.paths=[["gitversion","commit"]];var We={configuration:x.definition,commands:[j,$,O,S,B,U,I],hooks:{async wrapNetworkRequest(t,e){return t}}};var it=We;return ot;})();
return plugin;
}
};
