/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-gitversion",
factory: function (require) {
var plugin=(()=>{var ke=Object.create,S=Object.defineProperty;var Ce=Object.getOwnPropertyDescriptor;var be=Object.getOwnPropertyNames;var Le=Object.getPrototypeOf,Re=Object.prototype.hasOwnProperty;var Te=t=>S(t,"__esModule",{value:!0});var d=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var O=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Ve=(t,e)=>{for(var r in e)S(t,r,{get:e[r],enumerable:!0})},$e=(t,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of be(e))!Re.call(t,n)&&n!=="default"&&S(t,n,{get:()=>e[n],enumerable:!(r=Ce(e,n))||r.enumerable});return t},v=t=>$e(Te(S(t!=null?ke(Le(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var te=O((z,ee)=>{(function(t,e){typeof define=="function"&&define.amd?define([],e):typeof z=="object"?ee.exports=e():t.compareVersions=e()})(z,function(){var t=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;function e(i,o){return i.indexOf(o)===-1?i.length:i.indexOf(o)}function r(i){var o=i.replace(/^v/,"").replace(/\+.*$/,""),p=e(o,"-"),l=o.substring(0,p).split(".");return l.push(o.substring(p+1)),l}function n(i){var o=parseInt(i,10);return isNaN(o)?i:o}function s(i){if(typeof i!="string")throw new TypeError("Invalid argument expected string");var o=i.match(t);if(!o)throw new Error("Invalid argument not valid semver ('"+i+"' received)");return o.shift(),o}function a(i,o){return typeof i!=typeof o?[String(i),String(o)]:[i,o]}function m(i,o){var[p,l]=a(n(i),n(o));return p>l?1:p<l?-1:0}function g(i,o){for(var p=0;p<Math.max(i.length,o.length);p++){var l=m(i[p]||0,o[p]||0);if(l!==0)return l}return 0}function c(i,o){[i,o].forEach(s);for(var p=r(i),l=r(o),f=0;f<Math.max(p.length-1,l.length-1);f++){var E=parseInt(p[f]||0,10),C=parseInt(l[f]||0,10);if(E>C)return 1;if(C>E)return-1}var L=p[p.length-1],R=l[l.length-1];if(L&&R){var x=L.split(".").map(n),P=R.split(".").map(n);for(f=0;f<Math.max(x.length,P.length);f++){if(x[f]===void 0||typeof P[f]=="string"&&typeof x[f]=="number")return-1;if(P[f]===void 0||typeof x[f]=="string"&&typeof P[f]=="number"||x[f]>P[f])return 1;if(P[f]>x[f])return-1}}else if(L||R)return L?-1:1;return 0}var u=[">",">=","=","<","<="],h={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]};function k(i){if(typeof i!="string")throw new TypeError("Invalid operator type, expected string but got "+typeof i);if(u.indexOf(i)===-1)throw new TypeError("Invalid operator, expected one of "+u.join("|"))}return c.validate=function(i){return typeof i=="string"&&t.test(i)},c.compare=function(i,o,p){k(p);var l=c(i,o);return h[p].indexOf(l)>-1},c.satisfies=function(i,o){var p=o.match(/^([<>=~^]+)/),l=p?p[1]:"=";if(l!=="^"&&l!=="~")return c.compare(i,o,l);var[f,E,C]=s(i),[L,R,x]=s(o);return m(f,L)!==0?!1:l==="^"?g([E,C],[R,x])>=0:m(E,R)!==0?!1:m(C,x)>=0},c})});var fe=O((St,K)=>{(function(){"use strict";var t=d("fs"),e=d("string_decoder").StringDecoder;function r(a,m,g,c,u){var h=0,c=c||"utf8",g=g||`
`,u=u||1024,k=new Buffer(u),i="",o=new e(c),p=!1,l=!1,f=-1;function E(){p||(t.close(a,function(x){if(x)throw x}),p=!0)}function C(x){function P(){t.read(a,k,0,u,h,function(G,N){var Z;if(G)throw G;N<u&&(l=!0,E()),h+=N,i+=o.write(k.slice(0,N)),f<0&&(f=i.indexOf(g)),Z=f===i.length-1,N&&(f===-1||Z)&&!l?P():x()})}P()}function L(){return i.length>0||!l}function R(x){function P(){var G=i.substring(0,f);i=i.substring(f+g.length),f=-1,x(G)}if(f<0&&(f=i.indexOf(g)),f<0)if(l)if(L())f=i.length,P();else throw new Error("No more lines to read.");else C(P);else P()}this.hasNextLine=L,this.nextLine=R,this.close=E,C(m)}function n(a,m,g,c,u){t.open(a,"r",parseInt("666",8),function(h,k){var i;if(h)throw h;i=new r(k,function(){m(i)},g,c,u)})}function s(a,m,g,c,u){var h,k=m.length==3;function i(){h&&typeof h=="function"&&h()}return n(a,function(o){function p(){o.hasNextLine()?setImmediate(f):i()}function l(E){E!==!1?p():(i(),o.close())}function f(){o.nextLine(function(E){var C=!o.hasNextLine();k?m(E,C,l):m(E,C)!==!1?p():(i(),o.close())})}p()},g,c,u),{then:function(o){h=o}}}K.exports.open=n,K.exports.eachLine=s})()});var le=O((Ot,pe)=>{pe.exports=function(t,e){e=e||{},e.listUnicodeChar=e.hasOwnProperty("listUnicodeChar")?e.listUnicodeChar:!1,e.stripListLeaders=e.hasOwnProperty("stripListLeaders")?e.stripListLeaders:!0,e.gfm=e.hasOwnProperty("gfm")?e.gfm:!0;var r=t||"";r=r.replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*$/gm,"");try{e.stripListLeaders&&(e.listUnicodeChar?r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,e.listUnicodeChar+" $1"):r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,"$1")),e.gfm&&(r=r.replace(/\n={2,}/g,`
`).replace(/~~/g,"").replace(/`{3}.*\n/g,"")),r=r.replace(/<[^>]*>/g,"").replace(/^[=\-]{2,}\s*$/g,"").replace(/\[\^.+?\](\: .*?$)?/g,"").replace(/\s{0,2}\[.*?\]: .*?$/g,"").replace(/\!\[.*?\][\[\(].*?[\]\)]/g,"").replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1").replace(/^\s{0,3}>\s?/g,"").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g,"").replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} {0,}(\n)?\s{0,}$/gm,"$1$2$3").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/(`{3,})(.*?)\1/gm,"$2").replace(/`(.+?)`/g,"$1").replace(/\n{2,}/g,`

`)}catch(n){return console.error(n),t}return r}});var xe=O((At,de)=>{var W=d("os").EOL,We=fe(),Ge=le(),ue=/\[?v?([\w\d.-]+\.[\w\d.-]+[a-zA-Z0-9])\]?/,me=/.*[ ](\d\d?\d?\d?[-/.]\d\d?[-/.]\d\d?\d?\d?).*/,Ne=/^###/,Se=/^[*-]/,Oe={removeMarkdown:!0};function Ae(t,e){if(typeof t=="undefined")throw new Error("missing options argument");if(typeof t=="string"&&(t={filePath:t}),typeof t=="object"){let s=typeof t.filePath!="undefined",a=typeof t.text!="undefined",m=typeof t.filePath!="string",g=typeof t.text!="string";if(!s&&!a)throw new Error("must provide filePath or text");if(s&&m)throw new Error("invalid filePath, expected string");if(a&&g)throw new Error("invalid text, expected string")}let r=Object.assign({},Oe,t),n=Ie(r);return typeof e=="function"&&n.then(function(s){e(null,s)}).catch(function(s){e(s)}),n}function Ie(t){let e=t.filePath,r=t.text,n={log:{versions:[]},current:null},s=je.bind(n,t);return new Promise(function(a,m){function g(){n.current&&ge(n),n.log.description=he(n.log.description),n.log.description===""&&delete n.log.description,a(n.log)}r?(r.split(/\r\n?|\n/mg).forEach(s),g()):We.eachLine(e,s,W).then(g)})}function je(t,e){if(!e.match(/^\[[^[\]]*\] *?:/)){if(!this.log.title&&e.match(/^# ?[^#]/)){this.log.title=e.substring(1).trim();return}if(e.match(/^##? ?[^#]/)){this.current&&this.current.title&&ge(this),this.current=Me(),ue.exec(e)&&(this.current.version=ue.exec(e)[1]),this.current.title=e.substring(2).trim(),this.current.title&&me.exec(this.current.title)&&(this.current.date=me.exec(this.current.title)[1]);return}if(this.current){if(this.current.body+=e+W,Ne.exec(e)){let r=e.replace("###","").trim();this.current.parsed[r]||(this.current.parsed[r]=[],this.current._private.activeSubhead=r)}if(Se.exec(e)){let r=t.removeMarkdown?Ge(e):e;this.current.parsed._.push(r),this.current._private.activeSubhead&&this.current.parsed[this.current._private.activeSubhead].push(r)}}else this.log.description=(this.log.description||"")+e+W}}function Me(){return{version:null,title:null,date:null,body:"",parsed:{_:[]},_private:{activeSubhead:null}}}function ge(t){delete t.current._private,t.current.body=he(t.current.body),t.log.versions.push(t.current)}function he(t){return t?(t=t.trim(),t=t.replace(new RegExp("["+W+"]*"),""),t=t.replace(new RegExp("["+W+"]*$"),""),t):""}de.exports=Ae});var De={};Ve(De,{default:()=>Fe});var T=v(d("@yarnpkg/core")),Y=v(d("clipanion"));var w;(function(a){a.MAIN="main",a.PRERELEASE="prerelease",a.RELEASE="release",a.FEATURE="feature",a.UNKNOWN="unknown"})(w||(w={}));var J=v(d("child_process"));async function b(t,e,r){return new Promise((n,s)=>{console.log(">>>",t,...e);let a=(0,J.spawn)(t,e,{cwd:r}),m="",g="";a.stdout.on("data",c=>{m+=c.toString()}),a.stderr.on("data",c=>{g+=c.toString()}),a.on("close",c=>{c===0?n({code:c,result:m}):s(new Error(m+g))})})}async function Q(){return process.env.BUILD_SOURCEBRANCHNAME?process.env.BUILD_SOURCEBRANCHNAME:(await b("git",["rev-parse","--abbrev-ref","HEAD"])).result.replace(/\n*$/,"")}async function X(t){return b("git",["tag",t])}var A="0.0.0",q=class{static async fromContext(e){let r=await T.Configuration.find(e.cwd,e.plugins),n=await Q();return new q(r,n)}constructor(e,r){this.yarnConfig=e;let n=e.get("featureBranchPatterns");console.log(n),console.log(r),this.featureBranchPatterns=n.map(s=>new RegExp(s)),this.mainBranch=e.get("mainBranch"),this.independentVersioning=e.get("independentVersioning"),this.versionTagPrefix=e.get("versionTagPrefix"),this.versionBranch=this.parse(r)}parse(e){if(this.mainBranch===e)return{branchType:w.MAIN,name:e};for(let r of this.featureBranchPatterns)if(r.test(e)){let n=r.exec(e);if(n&&n.length===2)return{name:n[1],branchType:w.FEATURE};throw new Y.UsageError(`The feature pattern '${r.source}' matched the current branch but it should result in exact 1 group match`)}return{name:"unknown",branchType:w.UNKNOWN}}},y=q;y.definition={featureBranchPatterns:{description:`Feature branches. This will apply the following rules to bumps:
  - version pattern: 'x.x.x-<<feature>>.<<increment>>'
  - always increment on each commit
  - no checking for conventional commits in git history
  - publish on npm channel '<<feature>>'`,isArray:!0,type:T.SettingsType.STRING,default:["^feature/(.*)$"]},releaseBranchPatterns:{description:`Release branches. This will apply the following rules to bumps:
  - Official release channels
  - Conventional commits enabled
  - publish on npm channel '<<release>>'`,isArray:!0,type:T.SettingsType.STRING,default:["^release/(.*)$"]},mainBranch:{description:"The main branch. This is the official channel and will produce npm packages with the lates npm disttag",type:T.SettingsType.STRING,default:"main"},independentVersioning:{description:"When independent versioning is enabled each package will have a different version based on the commits in the package folder",type:T.SettingsType.BOOLEAN,default:!1},versionTagPrefix:{description:'The prefix used for git tags. Defaults to "v"',type:T.SettingsType.STRING,default:"v"}};var re=v(d("@yarnpkg/cli")),ne=v(d("@yarnpkg/core"));function I(t,e){let r=t;return e&&(e.scope&&(r+=`@${e.scope}/`),r+=e.name,r+="-"),r}async function V(t,e){return Promise.all(t.map(r=>H(r,e)))}async function H(t,e){if(t.manifest.version!==e)return console.log(`@${t.locator.scope}/${t.locator.name}`,t.manifest.version,"=>",e),t.manifest.version=e,t.persistManifest()}var Be=te(),$=class extends re.BaseCommand{async execute(){let e=await y.fromContext(this.context),{project:r}=await ne.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning){let n=r.workspaces.map(s=>this.updateWorkspaceFromGit(e.versionTagPrefix,e.versionBranch,s));Promise.all(n)}else{let n=[this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch),...r.workspaces.map(a=>this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch,a.locator))],s=(await Promise.all(n)).sort(Be).reverse();await V(r.workspaces,s[0])}}async updateWorkspaceFromGit(e,r,n){let s=await this.determineCurrentGitVersion(e,r,n.locator);return H(n,s)}async determineCurrentGitVersion(e,r,n){let s=I(e,n),a=`${s}*`,c=(await b("git",["-c","versionsort.suffix=-","tag","--sort=-version:refname","--list",a])).result.split(`
`),u=c.filter(o=>new RegExp(`^${this.escapeRegExp(s)}[0-9]+.[0-9]+.[0-9]+$`).test(o));if(r.branchType!==w.MAIN){let o=c.filter(p=>new RegExp(`${s}[0-9]+.[0-9]+.[0-9]+-${this.escapeRegExp(r.name)}.[0-9]+$`).test(p));o.length>0?c=o:c=u}else c=u;c=c.filter(o=>o);let h;c.length>0?h=c[0]:h="0.0.0";let k=h,i=new RegExp(`^${this.escapeRegExp(s)}`);return k=k.replace(i,""),k}escapeRegExp(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}};$.paths=[["gitversion","restore"]];var ie=v(d("@yarnpkg/cli")),j=v(d("@yarnpkg/core"));var M=class extends ie.BaseCommand{async execute(){let e=await j.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await j.Project.find(e,this.context.cwd);await V(r.workspaces,A)}};M.paths=[["gitversion","reset"]];var se=v(d("@yarnpkg/cli")),U=v(d("@yarnpkg/core"));async function oe(t,e,r){if(t.branchType===w.FEATURE)return b("yarn",["standard-version",`--prerelease=${t.name}`,"-release-as=patch","--path=.","--skip.changelog","--no-sign","--skip.commit","--skip.tag",`--tag-prefix='${e}'`],r);if(t.branchType===w.PRERELEASE)return b("yarn",["standard-version",`--prerelease=${t.name}`,"--path=.","--no-sign","--skip.commit","--skip.tag",`--tag-prefix='${e}'`],r);if(t.branchType===w.RELEASE||t.branchType===w.MAIN)return b("yarn",["standard-version","--path=.","--no-sign","--skip.commit","--skip.tag",`--tag-prefix='${e}'`],r)}var _=class extends se.BaseCommand{async execute(){let e=new $;e.context=this.context,e.cli=this.cli,await e.execute();let r=await y.fromContext(this.context),{project:n}=await U.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{await oe(r.versionBranch,I(r.versionTagPrefix),n.topLevelWorkspace.cwd);let s=await U.Manifest.find(n.topLevelWorkspace.cwd);s.version&&await V(n.workspaces,s.version)}}};_.paths=[["gitversion","bump"]];var ve=v(d("@yarnpkg/cli")),we=v(d("@yarnpkg/core"));var ye=v(d("path"));var ae=v(d("@yarnpkg/cli")),ce=v(d("@yarnpkg/core"));var B=class extends ae.BaseCommand{async execute(){let e=await y.fromContext(this.context),{project:r}=await ce.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning)throw new Error("Not implemented");{let n=r.topLevelWorkspace.manifest.version;n&&n!==A&&await X(`${e.versionTagPrefix}${n}`)}}};B.paths=[["gitversion","tag"]];var Ue=xe(),F=class extends ve.BaseCommand{async execute(){let e=new B;e.context=this.context,e.cli=this.cli,await e.execute();let r=await y.fromContext(this.context),{project:n}=await we.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{let a=n.workspaces.filter(u=>u.manifest.private===!1).map(u=>{let h=[];(r.versionBranch.branchType===w.FEATURE||r.versionBranch.branchType===w.PRERELEASE)&&(h=["--tag",r.versionBranch.name]),b("yarn",["npm","publish",...h],u.cwd)});await Promise.all(a);let m=await Ue({filePath:(0,ye.join)(n.topLevelWorkspace.cwd,"CHANGELOG.md"),removeMarkdown:!1}),g=n.topLevelWorkspace.manifest.version,c=m.versions.find(u=>u.version===g);c&&await n.configuration.triggerHook(u=>u.afterPublish,n,n.topLevelWorkspace,c)}}};F.paths=[["gitversion","publish"]];var Ee=v(d("@yarnpkg/cli")),Pe=v(d("@yarnpkg/core"));var D=class extends Ee.BaseCommand{async execute(){let e=await y.fromContext(this.context);console.log(e.versionBranch);let{project:r}=await Pe.Project.find(e.yarnConfig,this.context.cwd);r.workspaces.forEach(n=>{console.log(n.locator.scope,n.locator.name,n.manifest.private,n.manifest.version)})}};D.paths=[["gitversion","check"]];var _e={configuration:y.definition,commands:[D,$,M,_,B,F],hooks:{async wrapNetworkRequest(t,e){return t}}},Fe=_e;return De;})();
return plugin;
}
};
