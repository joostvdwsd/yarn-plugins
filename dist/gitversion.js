/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-gitversion",
factory: function (require) {
var plugin=(()=>{var We=Object.create,N=Object.defineProperty,Oe=Object.defineProperties,Se=Object.getOwnPropertyDescriptor,Ae=Object.getOwnPropertyDescriptors,Ie=Object.getOwnPropertyNames,re=Object.getOwnPropertySymbols,je=Object.getPrototypeOf,ne=Object.prototype.hasOwnProperty,Ue=Object.prototype.propertyIsEnumerable;var ie=(t,e,r)=>e in t?N(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,oe=(t,e)=>{for(var r in e||(e={}))ne.call(e,r)&&ie(t,r,e[r]);if(re)for(var r of re(e))Ue.call(e,r)&&ie(t,r,e[r]);return t},se=(t,e)=>Oe(t,Ae(e)),Me=t=>N(t,"__esModule",{value:!0});var g=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var F=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_e=(t,e)=>{for(var r in e)N(t,r,{get:e[r],enumerable:!0})},Fe=(t,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Ie(e))!ne.call(t,n)&&n!=="default"&&N(t,n,{get:()=>e[n],enumerable:!(r=Se(e,n))||r.enumerable});return t},h=t=>Fe(Me(N(t!=null?We(je(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var pe=F((Y,fe)=>{(function(t,e){typeof define=="function"&&define.amd?define([],e):typeof Y=="object"?fe.exports=e():t.compareVersions=e()})(Y,function(){var t=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;function e(i,s){return i.indexOf(s)===-1?i.length:i.indexOf(s)}function r(i){var s=i.replace(/^v/,"").replace(/\+.*$/,""),l=e(s,"-"),u=s.substring(0,l).split(".");return u.push(s.substring(l+1)),u}function n(i){var s=parseInt(i,10);return isNaN(s)?i:s}function a(i){if(typeof i!="string")throw new TypeError("Invalid argument expected string");var s=i.match(t);if(!s)throw new Error("Invalid argument not valid semver ('"+i+"' received)");return s.shift(),s}function o(i,s){return typeof i!=typeof s?[String(i),String(s)]:[i,s]}function m(i,s){var[l,u]=o(n(i),n(s));return l>u?1:l<u?-1:0}function p(i,s){for(var l=0;l<Math.max(i.length,s.length);l++){var u=m(i[l]||0,s[l]||0);if(u!==0)return u}return 0}function c(i,s){[i,s].forEach(a);for(var l=r(i),u=r(s),f=0;f<Math.max(l.length-1,u.length-1);f++){var k=parseInt(l[f]||0,10),C=parseInt(u[f]||0,10);if(k>C)return 1;if(C>k)return-1}var L=l[l.length-1],V=u[u.length-1];if(L&&V){var w=L.split(".").map(n),b=V.split(".").map(n);for(f=0;f<Math.max(w.length,b.length);f++){if(w[f]===void 0||typeof b[f]=="string"&&typeof w[f]=="number")return-1;if(b[f]===void 0||typeof w[f]=="string"&&typeof b[f]=="number"||w[f]>b[f])return 1;if(b[f]>w[f])return-1}}else if(L||V)return L?-1:1;return 0}var y=[">",">=","=","<","<="],v={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]};function E(i){if(typeof i!="string")throw new TypeError("Invalid operator type, expected string but got "+typeof i);if(y.indexOf(i)===-1)throw new TypeError("Invalid operator, expected one of "+y.join("|"))}return c.validate=function(i){return typeof i=="string"&&t.test(i)},c.compare=function(i,s,l){E(l);var u=c(i,s);return v[l].indexOf(u)>-1},c.satisfies=function(i,s){var l=s.match(/^([<>=~^]+)/),u=l?l[1]:"=";if(u!=="^"&&u!=="~")return c.compare(i,s,u);var[f,k,C]=a(i),[L,V,w]=a(s);return m(f,L)!==0?!1:u==="^"?p([k,C],[V,w])>=0:m(k,V)!==0?!1:m(C,w)>=0},c})});var ve=F((Kt,ee)=>{(function(){"use strict";var t=g("fs"),e=g("string_decoder").StringDecoder;function r(o,m,p,c,y){var v=0,c=c||"utf8",p=p||`
`,y=y||1024,E=new Buffer(y),i="",s=new e(c),l=!1,u=!1,f=-1;function k(){l||(t.close(o,function(w){if(w)throw w}),l=!0)}function C(w){function b(){t.read(o,E,0,y,v,function(M,_){var te;if(M)throw M;_<y&&(u=!0,k()),v+=_,i+=s.write(E.slice(0,_)),f<0&&(f=i.indexOf(p)),te=f===i.length-1,_&&(f===-1||te)&&!u?b():w()})}b()}function L(){return i.length>0||!u}function V(w){function b(){var M=i.substring(0,f);i=i.substring(f+p.length),f=-1,w(M)}if(f<0&&(f=i.indexOf(p)),f<0)if(u)if(L())f=i.length,b();else throw new Error("No more lines to read.");else C(b);else b()}this.hasNextLine=L,this.nextLine=V,this.close=k,C(m)}function n(o,m,p,c,y){t.open(o,"r",parseInt("666",8),function(v,E){var i;if(v)throw v;i=new r(E,function(){m(i)},p,c,y)})}function a(o,m,p,c,y){var v,E=m.length==3;function i(){v&&typeof v=="function"&&v()}return n(o,function(s){function l(){s.hasNextLine()?setImmediate(f):i()}function u(k){k!==!1?l():(i(),s.close())}function f(){s.nextLine(function(k){var C=!s.hasNextLine();E?m(k,C,u):m(k,C)!==!1?l():(i(),s.close())})}l()},p,c,y),{then:function(s){v=s}}}ee.exports.open=n,ee.exports.eachLine=a})()});var ye=F((Zt,we)=>{we.exports=function(t,e){e=e||{},e.listUnicodeChar=e.hasOwnProperty("listUnicodeChar")?e.listUnicodeChar:!1,e.stripListLeaders=e.hasOwnProperty("stripListLeaders")?e.stripListLeaders:!0,e.gfm=e.hasOwnProperty("gfm")?e.gfm:!0;var r=t||"";r=r.replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*$/gm,"");try{e.stripListLeaders&&(e.listUnicodeChar?r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,e.listUnicodeChar+" $1"):r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,"$1")),e.gfm&&(r=r.replace(/\n={2,}/g,`
`).replace(/~~/g,"").replace(/`{3}.*\n/g,"")),r=r.replace(/<[^>]*>/g,"").replace(/^[=\-]{2,}\s*$/g,"").replace(/\[\^.+?\](\: .*?$)?/g,"").replace(/\s{0,2}\[.*?\]: .*?$/g,"").replace(/\!\[.*?\][\[\(].*?[\]\)]/g,"").replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1").replace(/^\s{0,3}>\s?/g,"").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g,"").replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} {0,}(\n)?\s{0,}$/gm,"$1$2$3").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/(`{3,})(.*?)\1/gm,"$2").replace(/`(.+?)`/g,"$1").replace(/\n{2,}/g,`

`)}catch(n){return console.error(n),t}return r}});var Le=F((Jt,Ce)=>{var A=g("os").EOL,ze=ve(),Ke=ye(),Pe=/\[?v?([\w\d.-]+\.[\w\d.-]+[a-zA-Z0-9])\]?/,ke=/.*[ ](\d\d?\d?\d?[-/.]\d\d?[-/.]\d\d?\d?\d?).*/,Ze=/^###/,Je=/^[*-]/,Qe={removeMarkdown:!0};function Xe(t,e){if(typeof t=="undefined")throw new Error("missing options argument");if(typeof t=="string"&&(t={filePath:t}),typeof t=="object"){let a=typeof t.filePath!="undefined",o=typeof t.text!="undefined",m=typeof t.filePath!="string",p=typeof t.text!="string";if(!a&&!o)throw new Error("must provide filePath or text");if(a&&m)throw new Error("invalid filePath, expected string");if(o&&p)throw new Error("invalid text, expected string")}let r=Object.assign({},Qe,t),n=Ye(r);return typeof e=="function"&&n.then(function(a){e(null,a)}).catch(function(a){e(a)}),n}function Ye(t){let e=t.filePath,r=t.text,n={log:{versions:[]},current:null},a=et.bind(n,t);return new Promise(function(o,m){function p(){n.current&&be(n),n.log.description=Ee(n.log.description),n.log.description===""&&delete n.log.description,o(n.log)}r?(r.split(/\r\n?|\n/mg).forEach(a),p()):ze.eachLine(e,a,A).then(p)})}function et(t,e){if(!e.match(/^\[[^[\]]*\] *?:/)){if(!this.log.title&&e.match(/^# ?[^#]/)){this.log.title=e.substring(1).trim();return}if(e.match(/^##? ?[^#]/)){this.current&&this.current.title&&be(this),this.current=tt(),Pe.exec(e)&&(this.current.version=Pe.exec(e)[1]),this.current.title=e.substring(2).trim(),this.current.title&&ke.exec(this.current.title)&&(this.current.date=ke.exec(this.current.title)[1]);return}if(this.current){if(this.current.body+=e+A,Ze.exec(e)){let r=e.replace("###","").trim();this.current.parsed[r]||(this.current.parsed[r]=[],this.current._private.activeSubhead=r)}if(Je.exec(e)){let r=t.removeMarkdown?Ke(e):e;this.current.parsed._.push(r),this.current._private.activeSubhead&&this.current.parsed[this.current._private.activeSubhead].push(r)}}else this.log.description=(this.log.description||"")+e+A}}function tt(){return{version:null,title:null,date:null,body:"",parsed:{_:[]},_private:{activeSubhead:null}}}function be(t){delete t.current._private,t.current.body=Ee(t.current.body),t.log.versions.push(t.current)}function Ee(t){return t?(t=t.trim(),t=t.replace(new RegExp("["+A+"]*"),""),t=t.replace(new RegExp("["+A+"]*$"),""),t):""}Ce.exports=Xe});var it={};_e(it,{BranchType:()=>d,DEFAULT_REPO_VERSION:()=>T,GitVersionBumpCommand:()=>S,GitVersionCheckCommand:()=>j,GitVersionCommitCommand:()=>U,GitVersionConfiguration:()=>x,GitVersionPublishCommand:()=>I,GitVersionResetCommand:()=>O,GitVersionRestoreCommand:()=>$,GitVersionTagCommand:()=>B,addAndCommit:()=>Q,bump:()=>H,checkGit:()=>De,currentBranch:()=>Z,default:()=>nt,execCapture:()=>P,tag:()=>J,tagPrefix:()=>G,updateWorkspaceWithVersion:()=>D,updateWorkspacesWithVersion:()=>W});var R=h(g("@yarnpkg/core")),ce=h(g("clipanion"));var d;(function(o){o.MAIN="main",o.PRERELEASE="prerelease",o.RELEASE="release",o.FEATURE="feature",o.UNKNOWN="unknown"})(d||(d={}));var ae=h(g("child_process"));async function P(t,e,r){return new Promise((n,a)=>{console.log(">>>",t,...e);let o=(0,ae.spawn)(t,e,{cwd:r}),m="",p="";o.stdout.on("data",c=>{m+=c.toString()}),o.stderr.on("data",c=>{p+=c.toString()}),o.on("close",c=>{c===0?n({code:c,result:m}):a(new Error(m+p))})})}async function De(){return P("git",["--version"])}async function Z(){return process.env.BUILD_SOURCEBRANCHNAME?process.env.BUILD_SOURCEBRANCHNAME:(await P("git",["rev-parse","--abbrev-ref","HEAD"])).result.replace(/\n*$/,"")}async function J(t,e){if(await P("git",["tag",t]),e)return P("git",["push","origin",t])}async function Q(t,e){let r=await P("git",["add",...t]);console.log(r.result);let n=await P("git",["commit",...t,"-m",e]);console.log(n.result)}var T="0.0.0",X=class{static async fromContext(e){let r=await R.Configuration.find(e.cwd,e.plugins),n=await Z();return new X(r,n)}constructor(e,r){this.yarnConfig=e;let n=e.get("featureBranchPatterns");console.log(n),console.log(r),this.featureBranchPatterns=n.map(a=>new RegExp(a)),this.mainBranch=e.get("mainBranch"),this.independentVersioning=e.get("independentVersioning"),this.versionTagPrefix=e.get("versionTagPrefix"),this.versionBranch=this.parse(r)}parse(e){if(this.mainBranch===e)return{branchType:d.MAIN,name:e};for(let r of this.featureBranchPatterns)if(r.test(e)){let n=r.exec(e);if(n&&n.length===2)return{name:n[1],branchType:d.FEATURE};throw new ce.UsageError(`The feature pattern '${r.source}' matched the current branch but it should result in exact 1 group match`)}return{name:"unknown",branchType:d.UNKNOWN}}},x=X;x.definition={featureBranchPatterns:{description:`Feature branches. This will apply the following rules to bumps:
  - version pattern: 'x.x.x-<<feature>>.<<increment>>'
  - always increment on each commit
  - no checking for conventional commits in git history
  - publish on npm channel '<<feature>>'`,isArray:!0,type:R.SettingsType.STRING,default:["^feature/(.*)$"]},releaseBranchPatterns:{description:`Release branches. This will apply the following rules to bumps:
  - Official release channels
  - Conventional commits enabled
  - publish on npm channel '<<release>>'`,isArray:!0,type:R.SettingsType.STRING,default:["^release/(.*)$"]},mainBranch:{description:"The main branch. This is the official channel and will produce npm packages with the lates npm disttag",type:R.SettingsType.STRING,default:"main"},independentVersioning:{description:"When independent versioning is enabled each package will have a different version based on the commits in the package folder",type:R.SettingsType.BOOLEAN,default:!1},versionTagPrefix:{description:'The prefix used for git tags. Defaults to "v"',type:R.SettingsType.STRING,default:"v"}};var le=h(g("@yarnpkg/cli")),ue=h(g("@yarnpkg/core"));function G(t,e){let r=t;return e&&(e.scope&&(r+=`@${e.scope}/`),r+=e.name,r+="-"),r}async function W(t,e){return Promise.all(t.map(r=>D(r,e)))}async function D(t,e){if(t.manifest.version!==e)return console.log(`@${t.locator.scope}/${t.locator.name}`,t.manifest.version,"=>",e),t.manifest.version=e,t.persistManifest()}var qe=pe(),$=class extends le.BaseCommand{async execute(){let e=await x.fromContext(this.context),{project:r}=await ue.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning){let n=r.workspaces.map(a=>this.updateWorkspaceFromGit(e.versionTagPrefix,e.versionBranch,a));Promise.all(n)}else{let n=[this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch),...r.workspaces.map(o=>this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch,o.locator))],a=(await Promise.all(n)).sort(qe).reverse();await W(r.workspaces,a[0])}}async updateWorkspaceFromGit(e,r,n){let a=await this.determineCurrentGitVersion(e,r,n.locator);return D(n,a)}async determineCurrentGitVersion(e,r,n){let a=G(e,n),o=`${a}*`,c=(await P("git",["-c","versionsort.suffix=-","tag","--sort=-version:refname","--list",o])).result.split(`
`),y=c.filter(s=>new RegExp(`^${this.escapeRegExp(a)}[0-9]+.[0-9]+.[0-9]+$`).test(s));if(r.branchType!==d.MAIN){let s=c.filter(l=>new RegExp(`${a}[0-9]+.[0-9]+.[0-9]+-${this.escapeRegExp(r.name)}.[0-9]+$`).test(l));s.length>0?c=s:c=y}else c=y;c=c.filter(s=>s);let v;c.length>0?v=c[0]:v="0.0.0";let E=v,i=new RegExp(`^${this.escapeRegExp(a)}`);return E=E.replace(i,""),E}escapeRegExp(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}};$.paths=[["gitversion","restore"]];var me=h(g("@yarnpkg/cli")),q=h(g("@yarnpkg/core"));var O=class extends me.BaseCommand{async execute(){let e=await q.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await q.Project.find(e,this.context.cwd);await W(r.workspaces,T)}};O.paths=[["gitversion","reset"]];var ge=h(g("@yarnpkg/cli")),z=h(g("@yarnpkg/core"));var He=["--no-sign","--skip.commit","--skip.tag"];async function H(t,e,r,n,a){let o=[...He];if(o.push(`--path='${r}'`),o.push(`--tag-prefix='${e}'`),o.push(`--infile='${r}/CHANGELOG.md'`),a&&(o.push(`--release-as='${a}'`),o.push("--skip.bump")),t.branchType===d.FEATURE)o.push(`--prerelease=${t.name}`,"--skip.changelog"),a||o.push("--release-as=patch");else if(t.branchType===d.PRERELEASE||t.branchType===d.RELEASE)o.push(`--prerelease=${t.name}`);else if(t.branchType===d.UNKNOWN)return;let m=await P("yarn",["standard-version",...o],n);console.log(m.result)}var S=class extends ge.BaseCommand{async execute(){let e=new $;e.context=this.context,e.cli=this.cli,await e.execute();let r=await x.fromContext(this.context),{project:n}=await z.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{await H(r.versionBranch,G(r.versionTagPrefix),n.topLevelWorkspace.cwd,n.topLevelWorkspace.cwd);let o=(await z.Manifest.find(n.topLevelWorkspace.cwd)).version;if(o){let m=n.topLevelWorkspace.getRecursiveWorkspaceChildren().map(async p=>(p.manifest.version=o,await p.persistManifest(),H(r.versionBranch,G(r.versionTagPrefix),p.cwd,n.topLevelWorkspace.cwd,o)));await Promise.all(m)}}}};S.paths=[["gitversion","bump"]];var Ve=h(g("@yarnpkg/cli")),K=h(g("@yarnpkg/core"));var Re=h(g("path"));var he=h(g("@yarnpkg/cli")),de=h(g("@yarnpkg/core")),xe=h(g("clipanion"));var B=class extends he.BaseCommand{constructor(){super(...arguments);this.push=xe.Option.Boolean("Push the tags to git",!0)}async execute(){let e=await x.fromContext(this.context),{project:r}=await de.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning)throw new Error("Not implemented");{let n=r.topLevelWorkspace.manifest.version;n&&n!==T&&await J(`${e.versionTagPrefix}${n}`,this.push)}}};B.paths=[["gitversion","tag"]];var rt=Le(),I=class extends Ve.BaseCommand{async execute(){let e=new B;e.context=this.context,e.cli=this.cli,await e.execute();let r=await x.fromContext(this.context),{project:n}=await K.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{let a=n.workspaces.filter(this.filterPublicWorkspace),o=a.map(p=>{let c=[];(r.versionBranch.branchType===d.FEATURE||r.versionBranch.branchType===d.PRERELEASE)&&(c=["--tag",r.versionBranch.name]),P("yarn",["npm","publish",...c],p.cwd)});await Promise.all(o);let m=se(oe({},await this.readChangeLog(n.topLevelWorkspace)),{packages:await Promise.all(a.map(p=>this.readChangeLog(p)))});await n.configuration.triggerHook(p=>p.afterPublish,n,r.versionBranch,m)}}async readChangeLog(e){let r=await rt({filePath:(0,Re.join)(e.cwd,"CHANGELOG.md"),removeMarkdown:!1}),n=e.manifest.version,a=r.versions.find(o=>o.version===n);return{version:n||"0.0.0",changelog:a,packageName:K.structUtils.stringifyIdent(e.locator)}}filterPublicWorkspace(e){return e.manifest.private===!1}};I.paths=[["gitversion","publish"]];var Te=h(g("@yarnpkg/cli")),$e=h(g("@yarnpkg/core"));var j=class extends Te.BaseCommand{async execute(){let e=await x.fromContext(this.context);console.log(e.versionBranch);let{project:r}=await $e.Project.find(e.yarnConfig,this.context.cwd);r.workspaces.forEach(n=>{console.log(n.locator.scope,n.locator.name,n.manifest.private,n.manifest.version)})}};j.paths=[["gitversion","check"]];var Be=h(g("@yarnpkg/cli")),Ge=h(g("@yarnpkg/core"));var U=class extends Be.BaseCommand{async execute(){let e=await x.fromContext(this.context),{project:r}=await Ge.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning)throw new Error("Not implemented");{let n=r.topLevelWorkspace.manifest.version;n&&n!==T&&await Q(["**/CHANGELOG.md"],`chore(release): ${n}`)}}};U.paths=[["gitversion","commit"]];var Ne={configuration:x.definition,commands:[j,$,O,S,B,U,I],hooks:{async wrapNetworkRequest(t,e){return t}}};var nt=Ne;return it;})();
return plugin;
}
};
