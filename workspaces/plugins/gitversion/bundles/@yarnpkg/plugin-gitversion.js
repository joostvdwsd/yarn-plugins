/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-gitversion",
factory: function (require) {
var plugin=(()=>{var Pe=Object.create,G=Object.defineProperty;var be=Object.getOwnPropertyDescriptor;var Ce=Object.getOwnPropertyNames;var Re=Object.getPrototypeOf,Le=Object.prototype.hasOwnProperty;var Te=t=>G(t,"__esModule",{value:!0});var h=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var O=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Ve=(t,e)=>{for(var r in e)G(t,r,{get:e[r],enumerable:!0})},$e=(t,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Ce(e))!Le.call(t,n)&&n!=="default"&&G(t,n,{get:()=>e[n],enumerable:!(r=be(e,n))||r.enumerable});return t},v=t=>$e(Te(G(t!=null?Pe(Re(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var te=O((z,ee)=>{(function(t,e){typeof define=="function"&&define.amd?define([],e):typeof z=="object"?ee.exports=e():t.compareVersions=e()})(z,function(){var t=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;function e(i,o){return i.indexOf(o)===-1?i.length:i.indexOf(o)}function r(i){var o=i.replace(/^v/,"").replace(/\+.*$/,""),p=e(o,"-"),l=o.substring(0,p).split(".");return l.push(o.substring(p+1)),l}function n(i){var o=parseInt(i,10);return isNaN(o)?i:o}function a(i){if(typeof i!="string")throw new TypeError("Invalid argument expected string");var o=i.match(t);if(!o)throw new Error("Invalid argument not valid semver ('"+i+"' received)");return o.shift(),o}function s(i,o){return typeof i!=typeof o?[String(i),String(o)]:[i,o]}function u(i,o){var[p,l]=s(n(i),n(o));return p>l?1:p<l?-1:0}function m(i,o){for(var p=0;p<Math.max(i.length,o.length);p++){var l=u(i[p]||0,o[p]||0);if(l!==0)return l}return 0}function c(i,o){[i,o].forEach(a);for(var p=r(i),l=r(o),f=0;f<Math.max(p.length-1,l.length-1);f++){var E=parseInt(p[f]||0,10),b=parseInt(l[f]||0,10);if(E>b)return 1;if(b>E)return-1}var C=p[p.length-1],L=l[l.length-1];if(C&&L){var x=C.split(".").map(n),k=L.split(".").map(n);for(f=0;f<Math.max(x.length,k.length);f++){if(x[f]===void 0||typeof k[f]=="string"&&typeof x[f]=="number")return-1;if(k[f]===void 0||typeof x[f]=="string"&&typeof k[f]=="number"||x[f]>k[f])return 1;if(k[f]>x[f])return-1}}else if(C||L)return C?-1:1;return 0}var g=[">",">=","=","<","<="],d={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]};function P(i){if(typeof i!="string")throw new TypeError("Invalid operator type, expected string but got "+typeof i);if(g.indexOf(i)===-1)throw new TypeError("Invalid operator, expected one of "+g.join("|"))}return c.validate=function(i){return typeof i=="string"&&t.test(i)},c.compare=function(i,o,p){P(p);var l=c(i,o);return d[p].indexOf(l)>-1},c.satisfies=function(i,o){var p=o.match(/^([<>=~^]+)/),l=p?p[1]:"=";if(l!=="^"&&l!=="~")return c.compare(i,o,l);var[f,E,b]=a(i),[C,L,x]=a(o);return u(f,C)!==0?!1:l==="^"?m([E,b],[L,x])>=0:u(E,L)!==0?!1:u(b,x)>=0},c})});var fe=O((Gt,K)=>{(function(){"use strict";var t=h("fs"),e=h("string_decoder").StringDecoder;function r(s,u,m,c,g){var d=0,c=c||"utf8",m=m||`
`,g=g||1024,P=new Buffer(g),i="",o=new e(c),p=!1,l=!1,f=-1;function E(){p||(t.close(s,function(x){if(x)throw x}),p=!0)}function b(x){function k(){t.read(s,P,0,g,d,function(N,S){var Z;if(N)throw N;S<g&&(l=!0,E()),d+=S,i+=o.write(P.slice(0,S)),f<0&&(f=i.indexOf(m)),Z=f===i.length-1,S&&(f===-1||Z)&&!l?k():x()})}k()}function C(){return i.length>0||!l}function L(x){function k(){var N=i.substring(0,f);i=i.substring(f+m.length),f=-1,x(N)}if(f<0&&(f=i.indexOf(m)),f<0)if(l)if(C())f=i.length,k();else throw new Error("No more lines to read.");else b(k);else k()}this.hasNextLine=C,this.nextLine=L,this.close=E,b(u)}function n(s,u,m,c,g){t.open(s,"r",parseInt("666",8),function(d,P){var i;if(d)throw d;i=new r(P,function(){u(i)},m,c,g)})}function a(s,u,m,c,g){var d,P=u.length==3;function i(){d&&typeof d=="function"&&d()}return n(s,function(o){function p(){o.hasNextLine()?setImmediate(f):i()}function l(E){E!==!1?p():(i(),o.close())}function f(){o.nextLine(function(E){var b=!o.hasNextLine();P?u(E,b,l):u(E,b)!==!1?p():(i(),o.close())})}p()},m,c,g),{then:function(o){d=o}}}K.exports.open=n,K.exports.eachLine=a})()});var le=O((Ot,pe)=>{pe.exports=function(t,e){e=e||{},e.listUnicodeChar=e.hasOwnProperty("listUnicodeChar")?e.listUnicodeChar:!1,e.stripListLeaders=e.hasOwnProperty("stripListLeaders")?e.stripListLeaders:!0,e.gfm=e.hasOwnProperty("gfm")?e.gfm:!0;var r=t||"";r=r.replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*$/gm,"");try{e.stripListLeaders&&(e.listUnicodeChar?r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,e.listUnicodeChar+" $1"):r=r.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,"$1")),e.gfm&&(r=r.replace(/\n={2,}/g,`
`).replace(/~~/g,"").replace(/`{3}.*\n/g,"")),r=r.replace(/<[^>]*>/g,"").replace(/^[=\-]{2,}\s*$/g,"").replace(/\[\^.+?\](\: .*?$)?/g,"").replace(/\s{0,2}\[.*?\]: .*?$/g,"").replace(/\!\[.*?\][\[\(].*?[\]\)]/g,"").replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1").replace(/^\s{0,3}>\s?/g,"").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g,"").replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} {0,}(\n)?\s{0,}$/gm,"$1$2$3").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/(`{3,})(.*?)\1/gm,"$2").replace(/`(.+?)`/g,"$1").replace(/\n{2,}/g,`

`)}catch(n){return console.error(n),t}return r}});var xe=O((At,de)=>{var W=h("os").EOL,We=fe(),Ne=le(),ue=/\[?v?([\w\d.-]+\.[\w\d.-]+[a-zA-Z0-9])\]?/,me=/.*[ ](\d\d?\d?\d?[-/.]\d\d?[-/.]\d\d?\d?\d?).*/,Se=/^###/,Ge=/^[*-]/,Oe={removeMarkdown:!0};function Ae(t,e){if(typeof t=="undefined")throw new Error("missing options argument");if(typeof t=="string"&&(t={filePath:t}),typeof t=="object"){let a=typeof t.filePath!="undefined",s=typeof t.text!="undefined",u=typeof t.filePath!="string",m=typeof t.text!="string";if(!a&&!s)throw new Error("must provide filePath or text");if(a&&u)throw new Error("invalid filePath, expected string");if(s&&m)throw new Error("invalid text, expected string")}let r=Object.assign({},Oe,t),n=Ie(r);return typeof e=="function"&&n.then(function(a){e(null,a)}).catch(function(a){e(a)}),n}function Ie(t){let e=t.filePath,r=t.text,n={log:{versions:[]},current:null},a=je.bind(n,t);return new Promise(function(s,u){function m(){n.current&&ge(n),n.log.description=he(n.log.description),n.log.description===""&&delete n.log.description,s(n.log)}r?(r.split(/\r\n?|\n/mg).forEach(a),m()):We.eachLine(e,a,W).then(m)})}function je(t,e){if(!e.match(/^\[[^[\]]*\] *?:/)){if(!this.log.title&&e.match(/^# ?[^#]/)){this.log.title=e.substring(1).trim();return}if(e.match(/^##? ?[^#]/)){this.current&&this.current.title&&ge(this),this.current=Ue(),ue.exec(e)&&(this.current.version=ue.exec(e)[1]),this.current.title=e.substring(2).trim(),this.current.title&&me.exec(this.current.title)&&(this.current.date=me.exec(this.current.title)[1]);return}if(this.current){if(this.current.body+=e+W,Se.exec(e)){let r=e.replace("###","").trim();this.current.parsed[r]||(this.current.parsed[r]=[],this.current._private.activeSubhead=r)}if(Ge.exec(e)){let r=t.removeMarkdown?Ne(e):e;this.current.parsed._.push(r),this.current._private.activeSubhead&&this.current.parsed[this.current._private.activeSubhead].push(r)}}else this.log.description=(this.log.description||"")+e+W}}function Ue(){return{version:null,title:null,date:null,body:"",parsed:{_:[]},_private:{activeSubhead:null}}}function ge(t){delete t.current._private,t.current.body=he(t.current.body),t.log.versions.push(t.current)}function he(t){return t?(t=t.trim(),t=t.replace(new RegExp("["+W+"]*"),""),t=t.replace(new RegExp("["+W+"]*$"),""),t):""}de.exports=Ae});var De={};Ve(De,{default:()=>Fe});var T=v(h("@yarnpkg/core")),Y=v(h("clipanion"));var w;(function(s){s.MAIN="main",s.PRERELEASE="prerelease",s.RELEASE="release",s.FEATURE="feature",s.UNKNOWN="unknown"})(w||(w={}));var J=v(h("child_process"));async function R(t,e,r){return new Promise((n,a)=>{console.log(">>>",t,...e);let s=(0,J.spawn)(t,e,{cwd:r}),u="",m="";s.stdout.on("data",c=>{u+=c.toString()}),s.stderr.on("data",c=>{m+=c.toString()}),s.on("close",c=>{c===0?n({code:c,result:u}):a(new Error(u+m))})})}async function Q(){return process.env.BUILD_SOURCEBRANCHNAME?process.env.BUILD_SOURCEBRANCHNAME:(await R("git",["rev-parse","--abbrev-ref","HEAD"])).result.replace(/\n*$/,"")}async function X(t){return R("git",["tag",t])}var A="0.0.0",q=class{static async fromContext(e){let r=await T.Configuration.find(e.cwd,e.plugins),n=await Q();return new q(r,n)}constructor(e,r){this.yarnConfig=e;let n=e.get("featureBranchPatterns");this.featureBranchPatterns=n.map(a=>new RegExp(a)),this.mainBranch=e.get("mainBranch"),this.independentVersioning=e.get("independentVersioning"),this.versionTagPrefix=e.get("versionTagPrefix"),this.versionBranch=this.parse(r)}parse(e){if(this.mainBranch===e)return{branchType:w.MAIN,name:e};for(let r of this.featureBranchPatterns)if(r.test(e)){let n=r.exec(e);if(n&&n.length===2)return{name:n[1],branchType:w.FEATURE};throw new Y.UsageError(`The feature pattern '${r.source}' matched the current branch but it should result in exact 1 group match`)}return{name:"unknown",branchType:w.UNKNOWN}}},y=q;y.definition={featureBranchPatterns:{description:`Feature branches. This will apply the following rules to bumps:
  - version pattern: 'x.x.x-<<feature>>.<<increment>>'
  - always increment on each commit
  - no checking for conventional commits in git history
  - publish on npm channel '<<feature>>'`,isArray:!0,type:T.SettingsType.STRING,default:["$feature/(.*)^"]},releaseBranchPatterns:{description:`Release branches. This will apply the following rules to bumps:
  - Official release channels
  - Conventional commits enabled
  - publish on npm channel '<<release>>'`,isArray:!0,type:T.SettingsType.STRING,default:["$release/(.*)^"]},mainBranch:{description:"The main branch. This is the official channel and will produce npm packages with the lates npm disttag",type:T.SettingsType.STRING,default:"main"},independentVersioning:{description:"When independent versioning is enabled each package will have a different version based on the commits in the package folder",type:T.SettingsType.BOOLEAN,default:!1},versionTagPrefix:{description:'The prefix used for git tags. Defaults to "v"',type:T.SettingsType.STRING,default:"v"}};var re=v(h("@yarnpkg/cli")),ne=v(h("@yarnpkg/core"));function I(t,e){let r=t;return e&&(e.scope&&(r+=`@${e.scope}/`),r+=e.name,r+="-"),r}async function V(t,e){return Promise.all(t.map(r=>H(r,e)))}async function H(t,e){if(t.manifest.version!==e)return console.log(`@${t.locator.scope}/${t.locator.name}`,t.manifest.version,"=>",e),t.manifest.version=e,t.persistManifest()}var Be=te(),$=class extends re.BaseCommand{async execute(){let e=await y.fromContext(this.context),{project:r}=await ne.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning){let n=r.workspaces.map(a=>this.updateWorkspaceFromGit(e.versionTagPrefix,e.versionBranch,a));Promise.all(n)}else{let n=[this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch),...r.workspaces.map(s=>this.determineCurrentGitVersion(e.versionTagPrefix,e.versionBranch,s.locator))],a=(await Promise.all(n)).sort(Be).reverse();await V(r.workspaces,a[0])}}async updateWorkspaceFromGit(e,r,n){let a=await this.determineCurrentGitVersion(e,r,n.locator);return H(n,a)}async determineCurrentGitVersion(e,r,n){let a=I(e,n),s=`${a}*`,c=(await R("git",["-c","versionsort.suffix=-","tag","--sort=-version:refname","--list",s])).result.split(`
`),g=c.filter(o=>new RegExp(`^${this.escapeRegExp(a)}[0-9]+.[0-9]+.[0-9]+$`).test(o));if(r.branchType!==w.MAIN){let o=c.filter(p=>new RegExp(`${a}[0-9]+.[0-9]+.[0-9]+-${this.escapeRegExp(r.name)}.[0-9]+$`).test(p));o.length>0?c=o:c=g}else c=g;c=c.filter(o=>o);let d;c.length>0?d=c[0]:d="0.0.0";let P=d,i=new RegExp(`^${this.escapeRegExp(a)}`);return P=P.replace(i,""),P}escapeRegExp(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}};$.paths=[["gitversion","restore"]];var ie=v(h("@yarnpkg/cli")),j=v(h("@yarnpkg/core"));var U=class extends ie.BaseCommand{async execute(){let e=await j.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await j.Project.find(e,this.context.cwd);await V(r.workspaces,A)}};U.paths=[["gitversion","reset"]];var ae=v(h("@yarnpkg/cli")),M=v(h("@yarnpkg/core"));async function oe(t,e,r){if(t.branchType===w.FEATURE)return R("yarn",["standard-version",`--prerelease=${t.name}`,"-release-as=patch","--path=.","--skip.changelog","--no-sign","--skip.commit","--skip.tag",`--tag-prefix='${e}'`],r);if(t.branchType===w.PRERELEASE)return R("yarn",["standard-version",`--prerelease=${t.name}`,"--path=.","--no-sign","--skip.commit","--skip.tag",`--tag-prefix='${e}'`],r);if(t.branchType===w.RELEASE||t.branchType===w.MAIN)return R("yarn",["standard-version","--path=.","--no-sign","--skip.commit","--skip.tag",`--tag-prefix='${e}'`],r)}var _=class extends ae.BaseCommand{async execute(){let e=new $;e.context=this.context,e.cli=this.cli,await e.execute();let r=await y.fromContext(this.context),{project:n}=await M.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{await oe(r.versionBranch,I(r.versionTagPrefix),n.topLevelWorkspace.cwd);let a=await M.Manifest.find(n.topLevelWorkspace.cwd);a.version&&await V(n.workspaces,a.version)}}};_.paths=[["gitversion","bump"]];var ve=v(h("@yarnpkg/cli")),we=v(h("@yarnpkg/core"));var ye=v(h("path"));var se=v(h("@yarnpkg/cli")),ce=v(h("@yarnpkg/core"));var B=class extends se.BaseCommand{async execute(){let e=await y.fromContext(this.context),{project:r}=await ce.Project.find(e.yarnConfig,this.context.cwd);if(e.independentVersioning)throw new Error("Not implemented");{let n=r.topLevelWorkspace.manifest.version;n&&n!==A&&await X(`${e.versionTagPrefix}${n}`)}}};B.paths=[["gitversion","tag"]];var Me=xe(),F=class extends ve.BaseCommand{async execute(){let e=new B;e.context=this.context,e.cli=this.cli,await e.execute();let r=await y.fromContext(this.context),{project:n}=await we.Project.find(r.yarnConfig,this.context.cwd);if(r.independentVersioning)throw new Error("Not implemented");{let s=n.workspaces.filter(g=>g.manifest.private===!1).map(g=>{let d=[];(r.versionBranch.branchType===w.FEATURE||r.versionBranch.branchType===w.PRERELEASE)&&(d=["--tag",r.versionBranch.name])});await Promise.all(s);let u=await Me({filePath:(0,ye.join)(n.topLevelWorkspace.cwd,"CHANGELOG.md"),removeMarkdown:!1}),m=n.topLevelWorkspace.manifest.version,c=u.versions.find(g=>g.version===m);c&&await n.configuration.triggerHook(g=>g.afterPublish,n,n.topLevelWorkspace,c)}}};F.paths=[["gitversion","publish"]];var Ee=v(h("@yarnpkg/cli")),ke=v(h("@yarnpkg/core"));var D=class extends Ee.BaseCommand{async execute(){let e=await y.fromContext(this.context),{project:r}=await ke.Project.find(e.yarnConfig,this.context.cwd);r.workspaces.forEach(a=>{console.log(a.locator.scope,a.locator.name,a.manifest.private,a.manifest.version)});let n=h("conventional-changelog-angular");console.log(n)}};D.paths=[["gitversion","check"]];var _e={configuration:y.definition,commands:[D,$,U,_,B,F],hooks:{async wrapNetworkRequest(t,e){return t}}},Fe=_e;return De;})();
return plugin;
}
};
